// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ProgiAPI.DbModels;

public partial class progiContext : DbContext, IProgiContext
{
    public progiContext(DbContextOptions<progiContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AssociationFees> AssociationFees { get; set; }

    public virtual DbSet<BuyerSellerFees> BuyerSellerFees { get; set; }

    public virtual DbSet<CarTypes> CarTypes { get; set; }

    public virtual DbSet<StorageFee> StorageFee { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AssociationFees>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("association_fees_pkey");

            entity.ToTable("association_fees");

            entity.Property(e => e.Id).HasColumnName("id");
        });

        modelBuilder.Entity<BuyerSellerFees>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("buyer_seller_fees_pkey");

            entity.ToTable("buyer_seller_fees");

            entity.HasIndex(e => new { e.CarTypeId, e.FeeType }, "buyer_seller_fees_car_type_id_fee_type_key").IsUnique();

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CarTypeId).HasColumnName("car_type_id");
            entity.Property(e => e.FeeType)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("fee_type");

            /*entity.HasOne(d => d.CarType).WithMany(p => p.BuyerSellerFees)
                .HasForeignKey(d => d.CarTypeId)
                .HasConstraintName("buyer_seller_fees_car_type_id_fkey");*/
        });

        modelBuilder.Entity<CarTypes>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("car_types_pkey");

            entity.ToTable("car_types");

            entity.HasIndex(e => e.TypeName, "car_types_type_name_key").IsUnique();

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.TypeName)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("type_name");
        });

        modelBuilder.Entity<StorageFee>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("storage_fee_pkey");

            entity.ToTable("storage_fee");

            entity.Property(e => e.Id).HasColumnName("id");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}